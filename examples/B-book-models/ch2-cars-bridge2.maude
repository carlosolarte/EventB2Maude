
--- Module generated by B2Maude (2024-12-20)
--- Context: 
--- Machine: 

load ../../b2m-theory/ebmachine .

mod ctxCarBridge is
  inc EBMACHINE .

  --- Context: Sets and constants
  eq init-sets = 
   ('COLOR |-> gen-set(("red" "green")))
  .

  eq init-constants = 
   ('d |-> val(elt(10)))
  .

--- ===============================

--- VARIABLES 
 var $$a : EBType .
 var $$b : EBType .
 var $$c : EBType .
 var $$mltl : EBType .
 var $$iltl : EBType .
 var $$mlpass : EBType .
 var $$ilpass : EBType .

--- CONSTANTS 
 var $$d : EBType .

vars $$CNAME $$MNAME : Qid .
vars $$SEv $$SEv' : SEvent .
var  $$Sets : Map{Qid, EBSet} .
var  $$Cte  : Map{Qid, EBType} .
var  $$WEIGHT : Nat .
var  $$GUARD :  Bool . 

--- ===============================

  eq init-variables(  < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > )
   =
    ('a |-> val(elt(0))),
   ('b |-> val(elt(0))),
   ('c |-> val(elt(0))),
   ('mltl |-> val(elt("green"))),
   ('iltl |-> val(elt("red"))),
   ('mlpass |-> val(elt(false))),
   ('ilpass |-> val(elt(true))) .


----------------------------
--- Event MLOut1
----------------------------

--- Activation of the Event MLOut1
ceq [MLOut1] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('MLOut1, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLOut1, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLOut1, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$mltl) =b (val(elt("green")))) andb (((($$a) + ($$b)) + (val(elt(1)))) <>b ($$d))) 
.

--- Change of state for event MLOut1
rl [MLOut1] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('MLOut1, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'ilpass |-> $$ilpass , 'a |-> ($$a) + (val(elt(1))) , 'mlpass |-> val(elt(true))) , events : ev('MLOut1, running) > 
    . 
----------------------------
--- Event MLOut2
----------------------------

--- Activation of the Event MLOut2
ceq [MLOut2] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('MLOut2, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLOut2, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLOut2, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$mltl) =b (val(elt("green")))) andb (((($$a) + ($$b)) + (val(elt(1)))) =b ($$d))) 
.

--- Change of state for event MLOut2
rl [MLOut2] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('MLOut2, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('b |-> $$b , 'c |-> $$c , 'iltl |-> $$iltl , 'ilpass |-> $$ilpass , 'a |-> ($$a) + (val(elt(1))) , 'mltl |-> val(elt("red")) , 'mlpass |-> val(elt(true))) , events : ev('MLOut2, running) > 
    . 
----------------------------
--- Event ILOut1
----------------------------

--- Activation of the Event ILOut1
ceq [ILOut1] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('ILOut1, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILOut1, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILOut1, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$iltl) =b (val(elt("green")))) andb (($$b) <>b (val(elt(1))))) 
.

--- Change of state for event ILOut1
rl [ILOut1] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('ILOut1, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('a |-> $$a , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'b |-> ($$b) - (val(elt(1))) , 'c |-> ($$c) + (val(elt(1))) , 'ilpass |-> val(elt(true))) , events : ev('ILOut1, running) > 
    . 
----------------------------
--- Event ILOut2
----------------------------

--- Activation of the Event ILOut2
ceq [ILOut2] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('ILOut2, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILOut2, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILOut2, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$iltl) =b (val(elt("green")))) andb (($$b) =b (val(elt(1))))) 
.

--- Change of state for event ILOut2
rl [ILOut2] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('ILOut2, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('a |-> $$a , 'mltl |-> $$mltl , 'mlpass |-> $$mlpass , 'b |-> ($$b) - (val(elt(1))) , 'c |-> ($$c) + (val(elt(1))) , 'iltl |-> val(elt("red")) , 'ilpass |-> val(elt(true))) , events : ev('ILOut2, running) > 
    . 
----------------------------
--- Event MLIn
----------------------------

--- Activation of the Event MLIn
ceq [MLIn] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('MLIn, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLIn, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLIn, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((val(elt(0))) < ($$c)) 
.

--- Change of state for event MLIn
rl [MLIn] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('MLIn, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass , 'c |-> ($$c) - (val(elt(1)))) , events : ev('MLIn, running) > 
    . 
----------------------------
--- Event ILIn
----------------------------

--- Activation of the Event ILIn
ceq [ILIn] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('ILIn, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILIn, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILIn, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((val(elt(0))) < ($$a)) 
.

--- Change of state for event ILIn
rl [ILIn] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('ILIn, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass , 'a |-> ($$a) - (val(elt(1))) , 'b |-> ($$b) + (val(elt(1)))) , events : ev('ILIn, running) > 
    . 
----------------------------
--- Event MLTlGreen
----------------------------

--- Activation of the Event MLTlGreen
ceq [MLTlGreen] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('MLTlGreen, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLTlGreen, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('MLTlGreen, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((((($$mltl) =b (val(elt("red")))) andb ((($$a) + ($$b)) < ($$d))) andb (($$c) =b (val(elt(0))))) andb (($$ilpass) =b (val(elt(true))))) 
.

--- Change of state for event MLTlGreen
rl [MLTlGreen] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('MLTlGreen, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'ilpass |-> $$ilpass , 'mltl |-> val(elt("green")) , 'iltl |-> val(elt("red")) , 'mlpass |-> val(elt(false))) , events : ev('MLTlGreen, running) > 
    . 
----------------------------
--- Event ILTlGreen
----------------------------

--- Activation of the Event ILTlGreen
ceq [ILTlGreen] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ( ( $$SEv, ev('ILTlGreen, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILTlGreen, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : (($$SEv, ev('ILTlGreen, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((((($$iltl) =b (val(elt("red")))) andb ((val(elt(0))) < ($$b))) andb (($$a) =b (val(elt(0))))) andb (($$mlpass) =b (val(elt(true))))) 
.

--- Change of state for event ILTlGreen
rl [ILTlGreen] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : ev('ILTlGreen, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) > 
    < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mlpass |-> $$mlpass , 'iltl |-> val(elt("green")) , 'mltl |-> val(elt("red")) , 'ilpass |-> val(elt(false))) , events : ev('ILTlGreen, running) > 
    . 
  --- Initialization of events
  eq init-events = ev('MLOut1, unknown),ev('MLOut2, unknown),ev('ILOut1, unknown),ev('ILOut2, unknown),ev('MLIn, unknown),ev('ILIn, unknown),ev('MLTlGreen, unknown),ev('ILTlGreen, unknown) .


  --- ------------
  --- Properties  
  --- ------------
  var SYS : Configuration .


  --- This definition depends on the system
  --- Change 1.0 with, for instance,   float(ebset2nat($$n)) 
  --- eq val(1, Conf < $$MNAME : Machine | variables: ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : $$SEv > ) = 1.0 . 
  --- Properties can be also defined in the .b file with a section PROPERTIES


eq prop(1,   < $$CNAME : Context | sets : ($$Sets), constants : ('d |-> $$d) >  < $$MNAME : Machine | variables : ('a |-> $$a , 'b |-> $$b , 'c |-> $$c , 'mltl |-> $$mltl , 'iltl |-> $$iltl , 'mlpass |-> $$mlpass , 'ilpass |-> $$ilpass), events : $$SEv > ) 
  = toFloat((( ( ($$mltl) =b (val(elt("green"))) )) impb ( ( ( ( (($$a) + ($$b)) < ($$d) )) andb (($$c) =b (val(elt(0)))) )))) .


  ---- Defining the initial state
  op initState : -> Configuration .
  eq initState = init-machine('ctxCarBridge, 'CarBridgeSystem) .
endm

eof

--- example of use

--- One step of rewriting
rew [1] initState . 

--- Search for all reachable states satisfying prop(1)
search initState =>* SYS such that SYS |= prop(1) .

--- Model Checking 
red modelCheck(initState, True) .

