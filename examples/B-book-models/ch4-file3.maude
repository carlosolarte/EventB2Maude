
--- Module generated by B2Maude (2024-12-20)
--- Context: 
--- Machine: 

load ../../b2m-theory/ebmachine .

mod ctxFILE is
  inc EBMACHINE .

  --- Context: Sets and constants
  eq init-sets = 
  empty 
  .

  eq init-constants = 
   ('file |-> val( ( elt(1) |-> elt(1) , elt(2) |-> elt(2) , elt(3) |-> elt(3) , elt(4) |-> elt(4) ) )),
   ('N |-> val(elt(4)))
  .

--- ===============================

--- VARIABLES 
 var $$fileRec : EBType .
 var $$b : EBType .
 var $$s : EBType .
 var $$r : EBType .
 var $$d : EBType .

--- CONSTANTS 
 var $$file : EBType .
 var $$N : EBType .

vars $$CNAME $$MNAME : Qid .
vars $$SEv $$SEv' : SEvent .
var  $$Sets : Map{Qid, EBSet} .
var  $$Cte  : Map{Qid, EBType} .
var  $$WEIGHT : Nat .
var  $$GUARD :  Bool . 

--- ===============================

  eq init-variables(  < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > )
   =
    ('fileRec |-> val((empty).EBRel)),
   ('b |-> val(elt(false))),
   ('s |-> val(elt(1))),
   ('r |-> val(elt(1))),
   ('d |-> val(elt(0))) .


----------------------------
--- Event final
----------------------------

--- Activation of the Event final
ceq [final] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : ( ( $$SEv, ev('final, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : (($$SEv, ev('final, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : (($$SEv, ev('final, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$b) =b (val(elt(false)))) andb (($$r) =b (($$N) + (val(elt(1)))))) 
.

--- Change of state for event final
rl [final] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : ev('final, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
    < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 's |-> $$s , 'r |-> $$r , 'd |-> $$d , 'b |-> val(elt(true))) , events : ev('final, running) > 
    . 
----------------------------
--- Event receive
----------------------------

--- Activation of the Event receive
ceq [receive] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : ( ( $$SEv, ev('receive, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : (($$SEv, ev('receive, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : (($$SEv, ev('receive, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool(($$s) =b (($$r) + (val(elt(1))))) 
.

--- Change of state for event receive
rl [receive] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : ev('receive, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
    < $$MNAME : Machine | variables : ('b |-> $$b , 's |-> $$s , 'd |-> $$d , 'fileRec |-> union($$fileRec, val( ( $$r |-> $$d ) )) , 'r |-> ($$r) + (val(elt(1)))) , events : ev('receive, running) > 
    . 
----------------------------
--- Event send
----------------------------

--- Activation of the Event send
ceq [send] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : ( ( $$SEv, ev('send, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : (($$SEv, ev('send, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : (($$SEv, ev('send, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$s) =b ($$r)) andb (($$r) <>b (($$N) + (val(elt(1)))))) 
.

--- Change of state for event send
rl [send] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : ev('send, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) > 
    < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 'r |-> $$r , 'd |-> ($$file ) ($$s) , 's |-> ($$s) + (val(elt(1)))) , events : ev('send, running) > 
    . 
  --- Initialization of events
  eq init-events = ev('final, unknown),ev('receive, unknown),ev('send, unknown) .


  --- ------------
  --- Properties  
  --- ------------
  var SYS : Configuration .


  --- This definition depends on the system
  --- Change 1.0 with, for instance,   float(ebset2nat($$n)) 
  --- eq val(1, Conf < $$MNAME : Machine | variables: ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : $$SEv > ) = 1.0 . 
  --- Properties can be also defined in the .b file with a section PROPERTIES


eq prop(1,   < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) >  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : $$SEv > ) 
  = toFloat(($$b)) .

eq prop(2,   < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) >  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : $$SEv > ) 
  = toFloat(($$s)) .

eq prop(3,   < $$CNAME : Context | sets : ($$Sets), constants : ('file |-> $$file , 'N |-> $$N) >  < $$MNAME : Machine | variables : ('fileRec |-> $$fileRec , 'b |-> $$b , 's |-> $$s , 'r |-> $$r , 'd |-> $$d), events : $$SEv > ) 
  = toFloat(($$r)) .


  ---- Defining the initial state
  op initState : -> Configuration .
  eq initState = init-machine('ctxFILE, 'FILE) .
endm

eof

--- example of use

--- One step of rewriting
rew [1] initState . 

--- Search for all reachable states satisfying prop(1)
search initState =>* SYS such that SYS |= prop(1) .

--- Model Checking 
red modelCheck(initState, True) .

--- Umaudemc for stochastic model checking
umaudemc scheck file.maude initState formula.quatex

