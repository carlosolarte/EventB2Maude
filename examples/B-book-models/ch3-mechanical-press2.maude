
--- Module generated by B2Maude (2024-12-20)
--- Context: 
--- Machine: 

load ../../b2m-theory/ebmachine .

mod ctxMechanicalPress is
  inc EBMACHINE .

  --- Context: Sets and constants
  eq init-sets = 
   ('STATUS |-> gen-set(("stopped" "working")))
  .

  eq init-constants = 
  empty 
  .

--- ===============================

--- VARIABLES 
 var $$motoract : EBType .
 var $$motorsen : EBType .
 var $$startmotorB : EBType .
 var $$stopmotorB : EBType .
 var $$startmotorI : EBType .
 var $$stopmotorI : EBType .

--- CONSTANTS 

vars $$CNAME $$MNAME : Qid .
vars $$SEv $$SEv' : SEvent .
var  $$Sets : Map{Qid, EBSet} .
var  $$Cte  : Map{Qid, EBType} .
var  $$WEIGHT : Nat .
var  $$GUARD :  Bool . 

--- ===============================

  eq init-variables(  < $$CNAME : Context | sets : ($$Sets), constants : (empty) > )
   =
    ('motoract |-> val(elt("stopped"))),
   ('motorsen |-> val(elt("stopped"))),
   ('startmotorB |-> val(elt(false))),
   ('stopmotorB |-> val(elt(false))),
   ('startmotorI |-> val(elt(false))),
   ('stopmotorI |-> val(elt(false))) .


----------------------------
--- Event PushStartMotorB
----------------------------

--- Activation of the Event PushStartMotorB
ceq [PushStartMotorB] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('PushStartMotorB, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('PushStartMotorB, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('PushStartMotorB, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool(($$startmotorB) =b (val(elt(false)))) 
.

--- Change of state for event PushStartMotorB
rl [PushStartMotorB] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('PushStartMotorB, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI , 'startmotorB |-> val(elt(true))) , events : ev('PushStartMotorB, running) > 
    . 
----------------------------
--- Event ReleaseStartMotorB
----------------------------

--- Activation of the Event ReleaseStartMotorB
ceq [ReleaseStartMotorB] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('ReleaseStartMotorB, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('ReleaseStartMotorB, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('ReleaseStartMotorB, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool(($$startmotorB) =b (val(elt(true)))) 
.

--- Change of state for event ReleaseStartMotorB
rl [ReleaseStartMotorB] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('ReleaseStartMotorB, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI , 'startmotorB |-> val(elt(false))) , events : ev('ReleaseStartMotorB, running) > 
    . 
----------------------------
--- Event StartMotor
----------------------------

--- Activation of the Event StartMotor
ceq [StartMotor] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('StartMotor, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('StartMotor, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('StartMotor, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((((($$motoract) =b (val(elt("stopped")))) andb (($$motorsen) =b (val(elt("stopped"))))) andb (($$startmotorI) =b (val(elt(false))))) andb (($$startmotorB) =b (val(elt(true))))) 
.

--- Change of state for event StartMotor
rl [StartMotor] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('StartMotor, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'stopmotorI |-> $$stopmotorI , 'startmotorI |-> val(elt(true)) , 'motoract |-> val(elt("working"))) , events : ev('StartMotor, running) > 
    . 
----------------------------
--- Event TReleaseStartMotorB
----------------------------

--- Activation of the Event TReleaseStartMotorB
ceq [TReleaseStartMotorB] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('TReleaseStartMotorB, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('TReleaseStartMotorB, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('TReleaseStartMotorB, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$startmotorI) =b (val(elt(true)))) andb (($$startmotorB) =b (val(elt(false))))) 
.

--- Change of state for event TReleaseStartMotorB
rl [TReleaseStartMotorB] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('TReleaseStartMotorB, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'stopmotorI |-> $$stopmotorI , 'startmotorI |-> val(elt(false))) , events : ev('TReleaseStartMotorB, running) > 
    . 
----------------------------
--- Event PushStopMotorB
----------------------------

--- Activation of the Event PushStopMotorB
ceq [PushStopMotorB] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('PushStopMotorB, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('PushStopMotorB, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('PushStopMotorB, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool(($$stopmotorB) =b (val(elt(false)))) 
.

--- Change of state for event PushStopMotorB
rl [PushStopMotorB] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('PushStopMotorB, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI , 'stopmotorB |-> val(elt(true))) , events : ev('PushStopMotorB, running) > 
    . 
----------------------------
--- Event ReleaseStopMotorB
----------------------------

--- Activation of the Event ReleaseStopMotorB
ceq [ReleaseStopMotorB] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('ReleaseStopMotorB, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('ReleaseStopMotorB, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('ReleaseStopMotorB, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool(($$stopmotorB) =b (val(elt(true)))) 
.

--- Change of state for event ReleaseStopMotorB
rl [ReleaseStopMotorB] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('ReleaseStopMotorB, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI , 'stopmotorB |-> val(elt(false))) , events : ev('ReleaseStopMotorB, running) > 
    . 
----------------------------
--- Event StopMotor
----------------------------

--- Activation of the Event StopMotor
ceq [StopMotor] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('StopMotor, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('StopMotor, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('StopMotor, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((((($$stopmotorI) =b (val(elt(false)))) andb (($$stopmotorB) =b (val(elt(true))))) andb (($$motoract) =b (val(elt("working"))))) andb (($$motorsen) =b (val(elt("working"))))) 
.

--- Change of state for event StopMotor
rl [StopMotor] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('StopMotor, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'motoract |-> val(elt("stopped")) , 'stopmotorI |-> val(elt(true))) , events : ev('StopMotor, running) > 
    . 
----------------------------
--- Event TreatReleaseStopMotorB
----------------------------

--- Activation of the Event TreatReleaseStopMotorB
ceq [TreatReleaseStopMotorB] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('TreatReleaseStopMotorB, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('TreatReleaseStopMotorB, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('TreatReleaseStopMotorB, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$stopmotorI) =b (val(elt(true)))) andb (($$stopmotorB) =b (val(elt(false))))) 
.

--- Change of state for event TreatReleaseStopMotorB
rl [TreatReleaseStopMotorB] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('TreatReleaseStopMotorB, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> val(elt(false))) , events : ev('TreatReleaseStopMotorB, running) > 
    . 
----------------------------
--- Event MotorStart
----------------------------

--- Activation of the Event MotorStart
ceq [MotorStart] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('MotorStart, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('MotorStart, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('MotorStart, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$motorsen) =b (val(elt("stopped")))) andb (($$motoract) =b (val(elt("working"))))) 
.

--- Change of state for event MotorStart
rl [MotorStart] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('MotorStart, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI , 'motorsen |-> val(elt("working"))) , events : ev('MotorStart, running) > 
    . 
----------------------------
--- Event MotorStop
----------------------------

--- Activation of the Event MotorStop
ceq [MotorStop] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('MotorStop, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('MotorStop, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('MotorStop, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool((($$motorsen) =b (val(elt("working")))) andb (($$motoract) =b (val(elt("stopped"))))) 
.

--- Change of state for event MotorStop
rl [MotorStop] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('MotorStop, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI , 'motorsen |-> val(elt("stopped"))) , events : ev('MotorStop, running) > 
    . 
----------------------------
--- Event PushButtonMotorFalse
----------------------------

--- Activation of the Event PushButtonMotorFalse
ceq [PushButtonMotorFalse] :
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ( ( $$SEv, ev('PushButtonMotorFalse, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('PushButtonMotorFalse, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : (($$SEv, ev('PushButtonMotorFalse, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(val(elt(1))) 
     /\ $$GUARD  := ebset2bool(((($$startmotorI) =b (val(elt(false)))) andb (($$startmotorB) =b (val(elt(true))))) andb ( ( (($$motoract) =b (val(elt("working")))) orb (($$motorsen) =b (val(elt("working")))) ))) 
.

--- Change of state for event PushButtonMotorFalse
rl [PushButtonMotorFalse] : 
    < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : ev('PushButtonMotorFalse, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : (empty) > 
    < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'stopmotorI |-> $$stopmotorI , 'startmotorI |-> val(elt(true))) , events : ev('PushButtonMotorFalse, running) > 
    . 
  --- Initialization of events
  eq init-events = ev('PushStartMotorB, unknown),ev('ReleaseStartMotorB, unknown),ev('StartMotor, unknown),ev('TReleaseStartMotorB, unknown),ev('PushStopMotorB, unknown),ev('ReleaseStopMotorB, unknown),ev('StopMotor, unknown),ev('TreatReleaseStopMotorB, unknown),ev('MotorStart, unknown),ev('MotorStop, unknown),ev('PushButtonMotorFalse, unknown) .


  --- ------------
  --- Properties  
  --- ------------
  var SYS : Configuration .


  --- This definition depends on the system
  --- Change 1.0 with, for instance,   float(ebset2nat($$n)) 
  --- eq val(1, Conf < $$MNAME : Machine | variables: ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : $$SEv > ) = 1.0 . 
  --- Properties can be also defined in the .b file with a section PROPERTIES


eq prop(1,   < $$CNAME : Context | sets : ($$Sets), constants : (empty) >  < $$MNAME : Machine | variables : ('motoract |-> $$motoract , 'motorsen |-> $$motorsen , 'startmotorB |-> $$startmotorB , 'stopmotorB |-> $$stopmotorB , 'startmotorI |-> $$startmotorI , 'stopmotorI |-> $$stopmotorI), events : $$SEv > ) 
  = toFloat((($$motorsen) =b (val(elt("working"))))) .


  ---- Defining the initial state
  op initState : -> Configuration .
  eq initState = init-machine('ctxMechanicalPress, 'MechanicalPressSystem) .
endm

eof

--- example of use

--- One step of rewriting
rew [1] initState . 

--- Search for all reachable states satisfying prop(1)
search initState =>* SYS such that SYS |= prop(1) .

--- Model Checking 
red modelCheck(initState, True) .

