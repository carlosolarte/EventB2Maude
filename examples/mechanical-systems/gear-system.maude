
--- Module generated by B2Maude (2024-12-20)
--- Context: 
--- Machine: 

load ../../b2m-theory/ebmachine .

mod ctxGearSystem is
  inc EBMACHINE .

  --- Context: Sets and constants
  eq init-sets = 
   ('SUD |-> gen-set(("up" "down"))),
   ('SER |-> gen-set(("extended" "retracted"))),
   ('SOC |-> gen-set(("open" "closed")))
  .

  eq init-constants = 
   ('FCMD |-> val(elt(9)))
  .

--- ===============================

--- VARIABLES 
 var $$handle : EBType .
 var $$gear : EBType .
 var $$door : EBType .
 var $$cmd : EBType .

--- CONSTANTS 
 var $$FCMD : EBType .

vars $$CNAME $$MNAME : Qid .
vars $$SEv $$SEv' : SEvent .
var  $$Sets : Map{Qid, EBSet} .
var  $$Cte  : Map{Qid, EBType} .
var  $$WEIGHT : Nat .
var  $$GUARD :  Bool . 

--- ===============================

  eq init-variables(  < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > )
   =
    ('handle |-> val(elt("up"))),
   ('gear |-> val(elt("retracted"))),
   ('door |-> val(elt("closed"))),
   ('cmd |-> val(elt(0))) .


----------------------------
--- Event pcmd
----------------------------

--- Activation of the Event pcmd
ceq [pcmd] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ( ( $$SEv, ev('pcmd, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('pcmd, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('pcmd, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(($$FCMD) - ($$cmd)) 
     /\ $$GUARD  := ebset2bool(($$cmd) <= ($$FCMD))  and  is-empty( (val(elt("up")) ! val(elt("down")) !) ) == false 
.

--- Change of state for event pcmd
rl [pcmd] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ev('pcmd, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
    < $$MNAME : Machine | variables : ('gear |-> $$gear , 'door |-> $$door , 'handle |-> choice(val(elt("up")) ! val(elt("down")) !) , 'cmd |-> ($$cmd) + (val(elt(1)))) , events : ev('pcmd, running) > 
    . 
----------------------------
--- Event extend
----------------------------

--- Activation of the Event extend
ceq [extend] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ( ( $$SEv, ev('extend, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('extend, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('extend, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(($$FCMD) + ($$cmd)) 
     /\ $$GUARD  := ebset2bool(((($$handle) =b (val(elt("down")))) andb (($$door) =b (val(elt("open"))))) andb (($$gear) =b (val(elt("retracted"))))) 
.

--- Change of state for event extend
rl [extend] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ev('extend, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
    < $$MNAME : Machine | variables : ('handle |-> $$handle , 'door |-> $$door , 'gear |-> choice( val(elt("extended")) @ 0.9  val(elt("retracted")) @ 0.1) , 'cmd |-> val(elt(0))) , events : ev('extend, running) > 
    . 
----------------------------
--- Event retract
----------------------------

--- Activation of the Event retract
ceq [retract] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ( ( $$SEv, ev('retract, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('retract, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('retract, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(($$FCMD) + ($$cmd)) 
     /\ $$GUARD  := ebset2bool(((($$handle) =b (val(elt("up")))) andb (($$door) =b (val(elt("open"))))) andb (($$gear) =b (val(elt("extended"))))) 
.

--- Change of state for event retract
rl [retract] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ev('retract, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
    < $$MNAME : Machine | variables : ('handle |-> $$handle , 'door |-> $$door , 'gear |-> choice( val(elt("extended")) @ 0.1  val(elt("retracted")) @ 0.9) , 'cmd |-> val(elt(0))) , events : ev('retract, running) > 
    . 
----------------------------
--- Event open
----------------------------

--- Activation of the Event open
ceq [open] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ( ( $$SEv, ev('open, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('open, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('open, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(($$FCMD) + ($$cmd)) 
     /\ $$GUARD  := ebset2bool((($$door) =b (val(elt("closed")))) andb ( ( ( ( (($$handle) =b (val(elt("down")))) andb (($$gear) =b (val(elt("retracted")))) )) orb ( ( (($$handle) =b (val(elt("up")))) andb (($$gear) =b (val(elt("extended")))) )) ))) 
.

--- Change of state for event open
rl [open] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ev('open, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
    < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> choice( val(elt("open")) @ 0.9  val(elt("closed")) @ 0.1) , 'cmd |-> val(elt(0))) , events : ev('open, running) > 
    . 
----------------------------
--- Event close
----------------------------

--- Activation of the Event close
ceq [close] :
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ( ( $$SEv, ev('close, unknown) ) ) > 
    =
    if $$WEIGHT > 0 and $$GUARD == true
    then 
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('close, enable($$WEIGHT)))) > 
    else
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : (($$SEv, ev('close, blocked))) > 
    fi
if      $$WEIGHT := ebset2nat(($$FCMD) + ($$cmd)) 
     /\ $$GUARD  := ebset2bool((($$door) =b (val(elt("open")))) andb ( ( ( ( (($$handle) =b (val(elt("down")))) andb (($$gear) =b (val(elt("extended")))) )) orb ( ( (($$handle) =b (val(elt("up")))) andb (($$gear) =b (val(elt("retracted")))) )) ))) 
.

--- Change of state for event close
rl [close] : 
    < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : ev('close, execute) > 
    =>
      < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) > 
    < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> choice( val(elt("open")) @ 0.1  val(elt("closed")) @ 0.9) , 'cmd |-> val(elt(0))) , events : ev('close, running) > 
    . 
  --- Initialization of events
  eq init-events = ev('pcmd, unknown),ev('extend, unknown),ev('retract, unknown),ev('open, unknown),ev('close, unknown) .


  --- ------------
  --- Properties  
  --- ------------
  var SYS : Configuration .


  --- This definition depends on the system
  --- Change 1.0 with, for instance,   float(ebset2nat($$n)) 
  --- eq val(1, Conf < $$MNAME : Machine | variables: ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : $$SEv > ) = 1.0 . 
  --- Properties can be also defined in the .b file with a section PROPERTIES


eq prop(1,   < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) >  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : $$SEv > ) 
  = toFloat((($$door) =b (val(elt("open"))))) .

eq prop(2,   < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) >  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : $$SEv > ) 
  = toFloat((($$gear) =b (val(elt("extended"))))) .

eq prop(3,   < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) >  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : $$SEv > ) 
  = toFloat(((($$gear) =b (val(elt("extended")))) andb (($$door) =b (val(elt("closed")))))) .

eq prop(4,   < $$CNAME : Context | sets : ($$Sets), constants : ('FCMD |-> $$FCMD) >  < $$MNAME : Machine | variables : ('handle |-> $$handle , 'gear |-> $$gear , 'door |-> $$door , 'cmd |-> $$cmd), events : $$SEv > ) 
  = toFloat((($$cmd) <= ($$FCMD))) .


  ---- Defining the initial state
  op initState : -> Configuration .
  eq initState = init-machine('ctxGearSystem, 'GearSystem) .
endm

eof

--- example of use

--- One step of rewriting
rew [1] initState . 

--- Search for all reachable states satisfying prop(1)
search initState =>* SYS such that SYS |= prop(1) .

--- Model Checking 
red modelCheck(initState, True) .

